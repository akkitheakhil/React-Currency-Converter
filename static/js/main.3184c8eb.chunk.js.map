{"version":3,"sources":["converter/Exchange.js","converter/repeat.svg","util.js","converter/Converter.js","App.js","index.js"],"names":["Exchange","props","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","exchangeText","className","value","onChange","map","option","type","isEmpty","undefined","Object","keys","length","Array","isArray","BASE_API_URL","Converter","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","axios","get","then","res","data","firstCurrency","rates","base","e","target","onClick","from","src","Repeat","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3184c8eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Exchange.css\";\r\n\r\nexport default function Exchange(props) {\r\n  const {\r\n    currencyOptions,\r\n    selectedCurrency,\r\n    onChangeCurrency,\r\n    onChangeAmount,\r\n    amount,\r\n    exchangeText,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"exchange-container\">\r\n      <div className=\"exchange-coutry\">\r\n        <div className=\"selected-country\">{exchangeText}</div>\r\n        <select value={selectedCurrency} onChange={onChangeCurrency}>\r\n          {currencyOptions.map((option) => (\r\n            <option key={option} value={option}>\r\n              {option}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"exchange-options\">\r\n        <input type=\"number\" value={amount} onChange={onChangeAmount}></input>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/repeat.8c37d50d.svg\";","export const isEmpty = (value) => {\r\n    if (value === null) {\r\n      return true;\r\n    } else if (typeof value !== 'number' && value === '') {\r\n      return true;\r\n    } else if (value === 'undefined' || value === undefined) {\r\n      return true;\r\n    } else if (value !== null && typeof value === 'object' && !Object.keys(value).length) {\r\n      return true;\r\n    } else if (value !== null && Array.isArray(value) && !value.length) {\r\n      return true;\r\n    }else {\r\n      return false;\r\n    }\r\n  };","import React, { useEffect, useState } from \"react\";\r\nimport \"./Converter.css\";\r\nimport axios from \"axios\";\r\nimport Exchange from \"./Exchange\";\r\nimport Repeat from \"./repeat.svg\";\r\nimport { isEmpty } from \"../util\";\r\nconst BASE_API_URL = \"https://api.exchangeratesapi.io/latest\";\r\n\r\nexport default function Converter() {\r\n  // React States\r\n  const [currencyOptions, setCurrencyOptions] = useState([]);\r\n  const [fromCurrency, setFromCurrency] = useState();\r\n  const [toCurrency, setToCurrency] = useState();\r\n  const [exchangeRate, setExchangeRate] = useState();\r\n  const [amount, setAmount] = useState(1);\r\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\r\n\r\n  let toAmount, fromAmount;\r\n  if (amountInFromCurrency) {\r\n    fromAmount = amount;\r\n    toAmount = amount * exchangeRate;\r\n  } else {\r\n    toAmount = amount;\r\n    fromAmount = amount / exchangeRate;\r\n  }\r\n\r\n  // React UseEffect Hooks\r\n  useEffect(() => {\r\n    axios.get(BASE_API_URL).then((res) => {\r\n      const data = res.data;\r\n      const firstCurrency = Object.keys(data.rates)[0];\r\n      setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\r\n      setFromCurrency(data.base);\r\n      setToCurrency(firstCurrency);\r\n      setExchangeRate(data.rates[firstCurrency]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isEmpty(fromCurrency) || isEmpty(toCurrency)) return;\r\n    axios\r\n      .get(`${BASE_API_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\r\n      .then((res) => {\r\n        setExchangeRate(res.data.rates[toCurrency]);\r\n      });\r\n  }, [fromCurrency, toCurrency]);\r\n\r\n  function handleFromAmountChange(e) {\r\n    setAmount(e.target.value);\r\n    setAmountInFromCurrency(true);\r\n  }\r\n\r\n  function handleFromAmountChange(e) {\r\n    setAmount(e.target.value);\r\n    setAmountInFromCurrency(true);\r\n  }\r\n\r\n  function handleToAmountChange(e) {\r\n    setAmount(e.target.value);\r\n    setAmountInFromCurrency(false);\r\n  }\r\n\r\n  function handleReverse() {\r\n    if (isEmpty(fromCurrency) || isEmpty(toCurrency)) return;\r\n    const from = fromCurrency;\r\n    const to = toCurrency;\r\n    setFromCurrency(to);\r\n    setToCurrency(from);\r\n  }\r\n\r\n  return (\r\n    <div className=\"converter\">\r\n      <h3>Currency Converter</h3>\r\n      <Exchange\r\n        exchangeText=\"FROM\"\r\n        currencyOptions={currencyOptions}\r\n        selectedCurrency={fromCurrency}\r\n        onChangeCurrency={(e) => setFromCurrency(e.target.value)}\r\n        onChangeAmount={handleFromAmountChange}\r\n        amount={fromAmount}\r\n      />\r\n\r\n      <div className=\"circle\" onClick={handleReverse}>\r\n        <img src={Repeat} alt=\"Repeat Logo\" />\r\n      </div>\r\n\r\n      <Exchange\r\n        exchangeText=\"TO\"\r\n        currencyOptions={currencyOptions}\r\n        selectedCurrency={toCurrency}\r\n        onChangeCurrency={(e) => setToCurrency(e.target.value)}\r\n        onChangeAmount={handleToAmountChange}\r\n        amount={toAmount}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import Converter from \"./converter/Converter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Converter/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}